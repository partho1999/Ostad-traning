// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model users {
  id                Int                @id @default(autoincrement())
  firstName         String             @db.VarChar(50)
  middleNme         String             @db.VarChar(50)
  lastName          String             @db.VarChar(50)
  mobile            String             @db.VarChar(15)
  email             String             @unique(map: "users_email_unique") @db.VarChar(50)
  password          String             @db.VarChar(32)
  admin             Int                @default(0) 
  registedAt        DateTime           @default(now()) @db.Timestamp(0)
  lastLogin         DateTime           @default(now()) @db.Timestamp(0)
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  product product[]
  order order[]
  cart cart[]
}

model categories {
  id           Int        @id @default(autoincrement()) 
  title        String     @db.VarChar(100)
  metaTitle    String     @db.VarChar(100)
  slug         String     @db.VarChar(100)
  content      String     @db.VarChar(100)
  created_at   DateTime   @default(now()) @db.Timestamp(0)
  updated_at   DateTime   @default(now()) @db.Timestamp(0) @updatedAt
  
  
}

model product{
  id                Int                @id @default(autoincrement()) 
  firstName         String             @db.VarChar(100)
  metaTitle         String             @db.VarChar(100)
  slug              String             @db.VarChar(100)
  summary           String             @db.VarChar(100)
  price             Int                
  discount          Int
  userId            Int
  publishedAt       DateTime           @default(now()) @db.Timestamp(0)
  startsAt          DateTime           @default(now()) @db.Timestamp(0)
  endsAt            DateTime           @default(now()) @db.Timestamp(0)
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  users             users              @relation(fields: [userId], references: [id], onDelete: Restrict,onUpdate: Cascade)
  product_meta product_meta[]
  product_review product_review[]
}

model product_meta{
  id                Int                @id @default(autoincrement()) 
  key               String             @db.VarChar(100)
  content           String             @db.VarChar(100)
  productId         Int             
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  products          product            @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model product_review{
  id                Int             @id @default(autoincrement()) 
  title             String             @db.VarChar(100)
  rating            String             @db.VarChar(100)
  content           String             @db.VarChar(100)
  productId         Int             
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  products          product            @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model order{
  id                Int             @id @default(autoincrement()) 
  title             String             @db.VarChar(100)
  token             String             @db.VarChar(100)
  subTotal          Int
  itemDiscount      Int
  tax               Int
  total             Int
  discount          Int
  grandTotal        Int
  firstName         String             @db.VarChar(100)
  middleNme         String             @db.VarChar(100)
  lastName          String             @db.VarChar(100)
  mobile            String             @db.VarChar(100)
  email             String             @unique(map: "users_email_unique") @db.VarChar(100)
  city              String             @db.VarChar(100)
  country           String             @db.VarChar(100)
  userId            Int             
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  users             users               @relation(fields: [userId], references: [id], onDelete: Restrict,onUpdate: Cascade)
}

model cart{
  id                Int             @id @default(autoincrement()) 
  title             String             @db.VarChar(100)
  sessionId         String             @db.VarChar(100)
  token             String             @db.VarChar(100)
  firstName         String             @db.VarChar(100)
  middleNme         String             @db.VarChar(100)
  lastName          String             @db.VarChar(100)
  mobile            String             @db.VarChar(100)
  email             String             @unique(map: "users_email_unique") @db.VarChar(100)
  city              String             @db.VarChar(100)
  country           String             @db.VarChar(100)
  userId            Int             
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  users             users               @relation(fields: [userId], references: [id], onDelete: Restrict,onUpdate: Cascade)
}

